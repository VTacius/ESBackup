# This is a basic workflow to help you get started with Actions

name: Construcción

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  construccion:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Activando el repositorio
      uses: actions/checkout@v2
      with:
        ref: '0.9.4'
    
    # Construcción del paquete con la Acción personalizada mediante Docker
    - name: Construcción del paquete
      id: building  
      uses:  VTacius/action-setuptool-rust@v0.8.0
    
    # Ponemos a disposición el artefacto, paso previo para subir el asset a un nuevo release
    - name: Subir el nuevo artefacto
      id: uploading
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.building.outputs.nombre_paquete }}
        path: ${{ steps.building.outputs.ruta_paquete }}
    
    - name: Crear el lanzamiento
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Subir el extra
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path:  ${{ steps.building.outputs.ruta_paquete }}
        asset_name: ${{ steps.building.outputs.nombre_paquete }}
        asset_content_type: application/gzip
